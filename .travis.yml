# This is the complex Travis configuration, which is intended for use
# on open source libraries which need compatibility across multiple GHC
# versions, must work with cabal-install, and should be
# cross-platform. For more information and other options, see:
#
# https://docs.haskellstack.org/en/stable/travis_ci/
#
# Copy these contents into the root directory of your Github project in a file
# named .travis.yml

# Do not choose a language; we provide our own build tools.
#   NOTE the above pertains to the GHC build tools, not the python build tools.
language: python

# Use new container infrastructure to enable caching
sudo: required

dist: xenial

# Caching so the next build will be fast too.
cache:
  directories:
  - $HOME/.ghc
  - $HOME/.cabal
  - $HOME/.stack
  - $TRAVIS_BUILD_DIR/.stack-work

# The different configurations we want to test. We have BUILD=cabal which uses
# cabal-install, and BUILD=stack which uses Stack. More documentation on each
# of those below.
#
# We set the compiler values here to tell Travis to use a different
# cache file per set of arguments.
#
# If you need to have different apt packages for each combination in the
# matrix, you can use a line such as:
#     addons: {apt: {packages: [libfcgi-dev,libgmp-dev]}}
matrix:
  include:
  # The Stack builds. We can pass in arbitrary Stack arguments via the ARGS
  # variable, such as using --stack-yaml to point to a different file.
  - env: BUILD=stack ARGS=""
    python: 3.8
    compiler: ": #stack default"
    addons: {apt: {packages: [ pkg-config, python-dev ]}}

  - env: BUILD=stack ARGS=""
    python: 3.9
    compiler: ": #stack default"
    addons: {apt: {packages: [ pkg-config, python-dev ]}}

  - env: BUILD=stack ARGS="--resolver lts-9"
    python: 3.9
    compiler: ": #stack 8.0.2"
    addons: {apt: {packages: [ pkg-config, python-dev ]}}

  - env: BUILD=stack ARGS="--resolver lts-11"
    python: 3.9
    compiler: ": #stack 8.2.2"
    addons: {apt: {packages: [ pkg-config, python-dev ]}}

  - env: BUILD=stack ARGS="--resolver lts-12"
    python: 3.9
    compiler: ": #stack 8.4.3"
    addons: {apt: {packages: [ pkg-config, python-dev ]}}

  - env: BUILD=stack ARGS="--resolver nightly"
    python: 3.9
    compiler: ": #stack nightly"
    addons: {apt: {packages: [ pkg-config, python-dev ]}}

  allow_failures:
  - env: BUILD=stack ARGS="--resolver nightly"

before_install:
# Using compiler above sets CC to an invalid value, so unset it
- unset CC

# We want to always allow newer versions of packages when building on GHC HEAD
- CABALARGS=""
- if [ "x$GHCVER" = "xhead" ]; then CABALARGS=--allow-newer; fi

# Download and unpack the stack executable
- export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.local/bin:/opt/alex/$ALEXVER/bin:/opt/happy/$HAPPYVER/bin:$HOME/.cabal/bin:$PATH
- mkdir -p ~/.local/bin
- |
  if [ `uname` = "Darwin" ]
  then
    travis_retry curl --insecure -L https://get.haskellstack.org/stable/osx-x86_64.tar.gz | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
  else
    travis_retry curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
  fi

  # Use the more reliable S3 mirror of Hackage
  mkdir -p $HOME/.cabal
  echo 'remote-repo: hackage.haskell.org:http://hackage.fpcomplete.com/' > $HOME/.cabal/config
  echo 'remote-repo-cache: $HOME/.cabal/packages' >> $HOME/.cabal/config


install:
- echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
- if [ -f configure.ac ]; then autoreconf -i; fi
- |
  stack --no-terminal --install-ghc $ARGS test --bench --only-dependencies


script:
- |
  PKG_CONFIG_PATH="${VIRTUAL_ENV}/lib/pkgconfig:${PKG_CONFIG_PATH}"
  PKG_CONFIG_PATH=$(python-config --prefix)/lib/pkgconfig:${PKG_CONFIG_PATH}
  echo $PKG_CONFIG_PATH
  export PKG_CONFIG_PATH
  stack --no-terminal $ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps
